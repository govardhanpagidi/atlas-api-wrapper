definitions:
  atlasresponse.AtlasRespone:
    properties:
      code:
        type: integer
      message:
        type: string
      response: {}
    type: object
  cluster.AdvancedAutoScaling:
    properties:
      compute:
        $ref: '#/definitions/cluster.Compute'
      diskGB:
        $ref: '#/definitions/cluster.DiskGB'
    type: object
  cluster.AdvancedRegionConfig:
    properties:
      BackingProviderName:
        type: string
      analyticsAutoScaling:
        $ref: '#/definitions/cluster.AdvancedAutoScaling'
      analyticsSpecs:
        $ref: '#/definitions/cluster.Specs'
      autoScaling:
        $ref: '#/definitions/cluster.AdvancedAutoScaling'
      electableSpecs:
        $ref: '#/definitions/cluster.Specs'
      priority:
        type: integer
      providerName:
        type: string
      readOnlySpecs:
        $ref: '#/definitions/cluster.Specs'
      regionName:
        type: string
    type: object
  cluster.AdvancedReplicationSpec:
    properties:
      advancedRegionConfigs:
        items:
          $ref: '#/definitions/cluster.AdvancedRegionConfig'
        type: array
      id:
        type: string
      numShards:
        type: integer
      zoneName:
        type: string
    type: object
  cluster.BiConnector:
    properties:
      enabled:
        type: boolean
      readPreference:
        type: string
    type: object
  cluster.Compute:
    properties:
      enabled:
        type: boolean
      maxInstanceSize:
        type: string
      minInstanceSize:
        type: string
      scaleDownEnabled:
        type: boolean
    type: object
  cluster.ConnectionStrings:
    properties:
      awsPrivateLink:
        type: string
      awsPrivateLinkSrv:
        type: string
      private:
        type: string
      privateEndpoint:
        items:
          $ref: '#/definitions/cluster.PrivateEndpoint'
        type: array
      privateSrv:
        type: string
      standard:
        type: string
      standardSrv:
        type: string
    type: object
  cluster.DiskGB:
    properties:
      enabled:
        type: boolean
    type: object
  cluster.Endpoint:
    properties:
      endpointID:
        type: string
      providerName:
        type: string
      region:
        type: string
    type: object
  cluster.Labels:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  cluster.Model:
    properties:
      advancedSettings:
        $ref: '#/definitions/cluster.ProcessArgs'
      backupEnabled:
        type: boolean
      biConnector:
        $ref: '#/definitions/cluster.BiConnector'
      clusterType:
        type: string
      connectionStrings:
        $ref: '#/definitions/cluster.ConnectionStrings'
      createdDate:
        type: string
      diskSizeGB:
        type: number
      encryptionAtRestProvider:
        type: string
      id:
        type: string
      labels:
        items:
          $ref: '#/definitions/cluster.Labels'
        type: array
      mongoDBMajorVersion:
        type: string
      mongoDBVersion:
        type: string
      name:
        type: string
      paused:
        type: boolean
      pitEnabled:
        type: boolean
      profile:
        type: string
      projectId:
        type: string
      publicAccessEnabled:
        type: boolean
      replicationSpecs:
        items:
          $ref: '#/definitions/cluster.AdvancedReplicationSpec'
        type: array
      rootCertType:
        type: string
      stateName:
        type: string
      terminationProtectionEnabled:
        type: boolean
      versionReleaseSystem:
        type: string
    type: object
  cluster.PrivateEndpoint:
    properties:
      connectionString:
        type: string
      endpoints:
        items:
          $ref: '#/definitions/cluster.Endpoint'
        type: array
      srvConnectionString:
        type: string
      type:
        type: string
    type: object
  cluster.ProcessArgs:
    properties:
      defaultReadConcern:
        type: string
      defaultWriteConcern:
        type: string
      failIndexKeyTooLong:
        type: boolean
      javascriptEnabled:
        type: boolean
      minimumEnabledTLSProtocol:
        type: string
      noTableScan:
        type: boolean
      oplogMinRetentionHours:
        type: number
      oplogSizeMB:
        type: integer
      sampleRefreshIntervalBIConnector:
        type: integer
      sampleSizeBIConnector:
        type: integer
    type: object
  cluster.Specs:
    properties:
      InstanceSize:
        type: string
      diskIOPS:
        type: string
      ebsVolumeType:
        type: string
      nodeCount:
        type: integer
    type: object
  database_user.LabelDefinition:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  database_user.Model:
    properties:
      awsIAMType:
        type: string
      databaseName:
        type: string
      deleteAfterDate:
        type: string
      labels:
        items:
          $ref: '#/definitions/database_user.LabelDefinition'
        type: array
      ldapAuthType:
        type: string
      password:
        type: string
      profile:
        type: string
      projectId:
        type: string
      roles:
        items:
          $ref: '#/definitions/database_user.RoleDefinition'
        type: array
      scopes:
        items:
          $ref: '#/definitions/database_user.ScopeDefinition'
        type: array
      username:
        type: string
      x509Type:
        type: string
    type: object
  database_user.RoleDefinition:
    properties:
      collectionName:
        type: string
      databaseName:
        type: string
      roleName:
        type: string
    type: object
  database_user.ScopeDefinition:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /{projectId}/clusters:
    get:
      consumes:
      - application/json
      description: Get all clusters along with their advanced configuration by project
        ID
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Public key
        in: query
        name: publicKey
        required: true
        type: string
      - description: Private key
        in: query
        name: privateKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cluster.Model'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Get all clusters
      tags:
      - Cluster
    post:
      consumes:
      - application/json
      description: create the cluster with the provided TshirtSize
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Public key
        in: query
        name: publicKey
        required: true
        type: string
      - description: Private key
        in: query
        name: privateKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: CreateCluster handles the POST requests to create the cluster with
        the provided TshirtSize
      tags:
      - Cluster
  /{projectId}/clusters/{clusterName}:
    delete:
      consumes:
      - application/json
      description: Delete a cluster by project ID and cluster name
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Public key
        in: query
        name: publicKey
        required: true
        type: string
      - description: Private key
        in: query
        name: privateKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Delete a cluster
      tags:
      - Cluster
    get:
      consumes:
      - application/json
      description: Get the state of a cluster by project ID and cluster name
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Cluster name
        in: path
        name: clusterName
        required: true
        type: string
      - description: Public key
        in: query
        name: publicKey
        required: true
        type: string
      - description: Private key
        in: query
        name: privateKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cluster.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Get the state of a cluster
      tags:
      - Cluster
  /collections:
    post:
      consumes:
      - application/json
      description: Create a new collection with the specified name and description
      parameters:
      - description: Collection name
        in: formData
        name: name
        required: true
        type: string
      - description: Collection description
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Create a new collection
      tags:
      - Collection
  /collections/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a collection with the specified ID
      parameters:
      - description: Collection ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Delete a collection
      tags:
      - Collection
  /database-users:
    get:
      consumes:
      - application/json
      description: Get all database users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database_user.Model'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Get all database users
      tags:
      - Database User
    post:
      consumes:
      - application/json
      description: Create a new database user with the specified name and email
      parameters:
      - description: Database user name
        in: formData
        name: name
        required: true
        type: string
      - description: Database user email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database_user.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Create a database user
      tags:
      - Database User
  /database-users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a database user with the specified ID
      parameters:
      - description: Database user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Delete a database user
      tags:
      - Database User
    get:
      consumes:
      - application/json
      description: Get a database user with the specified ID
      parameters:
      - description: Database user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database_user.Model'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Get a database user
      tags:
      - Database User
  /databases:
    post:
      consumes:
      - application/json
      description: Create a new database with the specified name and owner
      parameters:
      - description: Database name
        in: formData
        name: name
        required: true
        type: string
      - description: Database owner
        in: formData
        name: owner
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Create a new database
      tags:
      - Database
  /databases/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a database with the specified ID
      parameters:
      - description: Database ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/atlasresponse.AtlasRespone'
      summary: Delete a database
      tags:
      - Database
swagger: "2.0"
